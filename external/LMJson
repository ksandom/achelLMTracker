#!/usr/bin/python

import Leap,sys,json

class LMJsonListener(Leap.Listener):
	def on_init(self, controller):
		self.state("inactive", "starting up/waiting for a device to be connected")
	
	def on_connect(self, controller):
		self.state("inactive", "just connected")
	
	def on_disconnect(self, controller):
		self.state("inactive", "just disconncted")
	
	def on_exit(self, controller):
		self.state("inactive", "exit")
	
	def on_frame(self, controller):
		frame = controller.frame()
		
		data = []
		for hand in frame.hands:
			whichHand = "left" if hand.is_left else "right"
			normal = hand.palm_normal
			direction = hand.direction
			position = hand.palm_position
			
			roll = normal.roll * Leap.RAD_TO_DEG
			pitch = direction.pitch * Leap.RAD_TO_DEG
			yaw = direction.yaw * Leap.RAD_TO_DEG
			
			x = position.x
			y = position.y
			z = position.z
			
			data.append({"whichHand":whichHand, "roll":roll, "pitch":pitch, "yaw":yaw, "x":x, "y":y, "z":z})
		
		hands=len(frame.hands)
		if (hands > 0):
			print json.dumps(data)
	
	def state(self, state, message):
		print "{\"state\":\""+state+"\",\"stateReason\",\""+message+"\"}"
	
	
def main():
	listener = LMJsonListener()
	controller = Leap.Controller()
	controller.add_listener(listener)
	
	try:
		sys.stdin.readline()
	except KeyboardInterrupt:
		listener.state("closing","shutting down")
	finally:
		controller.remove_listener(listener)

if __name__ == "__main__":
	main()
